@page "/ActiveTimeManagement"
<h3>ActiveTimeManagement</h3>

@using Backend;
@using System.Linq;

<EditForm Model="listOfUsers">
    <select 
    @onchange="listOfUsers.OnValueChanged">
        @foreach (string user in listOfUsers.users)
        {
            <option>@user</option>
        }
    </select>
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["monday"]' />
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["tuesday" ]'  />
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["wednesday"] '  />
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["thursday"]'  />
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["friday"]'  />
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["saturday"]'  />
    <br /><input @bind='listOfUsers.dayOfTheWeekAndTime["sunday"]'  />

    <br /><label>
        Consumed time (minutes): 
        <input @bind="listOfUsers.secondsToday" />
    </label>

    <br /><button class="btn btn-primary" @onclick="listOfUsers.CommitValues">Commit Values</button>

</EditForm>

@code {
    ListOfUsers listOfUsers = new ListOfUsers();

    class ListOfUsers
    {
        public Dictionary<string,int> dayOfTheWeekAndTime=new Dictionary<string, int>();
        private string currentUser;
        private ProcessSQL pSQL;
        private Monitor vMon;
        public int secondsToday;
        //public int monday=0;
        //public int tuesday=0;
        //public int wednesday=0;
        //public int thursday=0;
        //public int friday=0;
        //public int saturday=0;
        //public int sunday=0;

        public List<string> users = new List<string>();
        public ListOfUsers()
        {

            pSQL = new ProcessSQL();
            secondsToday = 0;
            users = Monitor.users;
            currentUser = users[0];

            dayOfTheWeekAndTime.Add("monday",0);
            dayOfTheWeekAndTime.Add("tuesday",0);
            dayOfTheWeekAndTime.Add("wednesday",0);
            dayOfTheWeekAndTime.Add("thursday",0);
            dayOfTheWeekAndTime.Add("friday",0);
            dayOfTheWeekAndTime.Add("saturday",0);
            dayOfTheWeekAndTime.Add("sunday",0);

            PopulateWeek();
            //users.Add("alexa");
            //users.Add("Saray");
        }

        public void PopulateWeek()
        {
            foreach (AppsPersist app in pSQL.ListActiveTime().Where(m => m._userName == currentUser))
            {
                dayOfTheWeekAndTime[app._dayOfTheWeek.ToLower()] = app._time;
            }
        }

        public Task OnValueChanged(ChangeEventArgs e)
        {
            currentUser = (string)e.Value;
            secondsToday=pSQL.GetUserConsumedSeconds(currentUser);

            //users=pSQL.GetUsers();
            PopulateWeek();

            return Task.CompletedTask;

        }
        public void CommitValues()
        {
            secondsToday=pSQL.GetUserConsumedSeconds(currentUser);
            foreach (string d in dayOfTheWeekAndTime.Keys)
            {
                pSQL.RemoveActiveTime(currentUser, d);
                pSQL.AddActiveTime(currentUser, dayOfTheWeekAndTime[d], d);
            }
            pSQL.SetUserConsumedSeconds(currentUser, secondsToday);
        }


    }



}